using System;
using System.Collections.Generic;
using System.Linq;
using System.ServiceModel;
using System.Text;
using System.Threading.Tasks;
using Contracts;
using System.Diagnostics;
using System.Threading;

namespace Client
{
    public class Program
    {
        static void Main(string[] args)
        {
            IService proxy;
            //string addr = "net.tcp://localhost:9999/IDS";
            string port = "9999";
            string serviceName = "IDS";
            string ip = GetIpAddress();
            string address = "net.tcp://" + ip + ":" + port + "/" + serviceName;

            NetTcpBinding binding = new NetTcpBinding();
            binding.Security.Mode = SecurityMode.Transport;
            binding.Security.Transport.ClientCredentialType = TcpClientCredentialType.Windows;
            binding.Security.Transport.ProtectionLevel = System.Net.Security.ProtectionLevel.EncryptAndSign;

            ChannelFactory<IService> kanal = new ChannelFactory<IService>(binding, new EndpointAddress(address));
            proxy = kanal.CreateChannel();

            Process[] processlist = Process.GetProcesses();
            foreach (Process theprocess in processlist)
            {
                Console.WriteLine("Process: {0} ID: {1}", theprocess.ProcessName, theprocess.Id);
            }

            Console.WriteLine("Malware Scanner started");
            Console.WriteLine("..............................................");

            while(true)
            {
                Console.WriteLine("Checking processes");
                // TO DO: Ubaciti funkciju koja proverava procese
                Thread.Sleep(2000);
            }
        }

        
        static string GetIpAddress()
        {
            while (true)
            {
                Console.WriteLine("Type in the ip address of the service!");
                Console.WriteLine("Type 'localhost' for your own ip or type the ip address of the service!");
                string addr = Console.ReadLine();
                if (addr == "localhost")
                    return addr;
                else if (CheckIfIpAdressIsCorrect(addr))
                     return addr;
                else
                {
                    Console.WriteLine("\nTHE IP ADDRESS WASNT TYPED CORRECTLY!");
                    continue;
                }
            }
        }

        //TO DO: Funckija za proveru da li je uneta ispravna ip adresa
        static bool CheckIfIpAdressIsCorrect(string ip) {
            return true;
        }

        //TO DO: Logovanje 
        static void LogCriticalLevel() { 
        //TO DO
        }
    }
}
