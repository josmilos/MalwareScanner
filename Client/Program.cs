using System;
using System.Collections.Generic;
using System.Linq;
using System.ServiceModel;
using System.Text;
using System.Threading.Tasks;
using DataModels;
using Contracts;
using System.Diagnostics;
using System.Security.Cryptography.X509Certificates;
using SecurityManager;

namespace Client
{
    public class Program
    {
        static void Main(string[] args)
        {

            //string addr = "net.tcp://localhost:9999/IDS";
            string port = "9999";
            string serviceName = "IDS";
            string ip = GetIpAddress();
            string address = "net.tcp://" + ip + ":" + port + "/" + serviceName;

            /// Define the expected service certificate. It is required to establish cmmunication using certificates.
            string srvCertCN = "";

            NetTcpBinding binding = new NetTcpBinding();
            //binding.Security.Mode = SecurityMode.Transport;
            binding.Security.Transport.ClientCredentialType = TcpClientCredentialType.Certificate;
           // binding.Security.Transport.ProtectionLevel = System.Net.Security.ProtectionLevel.EncryptAndSign;

            /// Use CertManager class to obtain the certificate based on the "srvCertCN" representing the expected service identity.
			X509Certificate2 srvCert = CertManager.GetCertificateFromStorage(StoreName.TrustedPeople, StoreLocation.LocalMachine, srvCertCN);
            EndpointAddress addr = new EndpointAddress(new Uri(address),
                                      new X509CertificateEndpointIdentity(srvCert));

            WCFClient proxy = new WCFClient(binding, addr);

            

            Process[] processlist = Process.GetProcesses();
            /*
            foreach (Process theprocess in processlist)
            {
                Console.WriteLine("Process: {0} ID: {1}", theprocess.ProcessName, theprocess.Id);
            }
            */


            Console.WriteLine("Service started");

            Console.ReadKey();
        }

        
        static string GetIpAddress()
        {
            while (true)
            {
                Console.WriteLine("Type in the ip address of the service!");
                Console.WriteLine("Type 'localhost' for your own ip or type the ip address of the service!");
                string addr = Console.ReadLine();
                if (addr == "localhost")
                    return addr;
                else if (CheckIfIpAdressIsCorrect(addr))
                     return addr;
                else
                {
                    Console.WriteLine("\nTHE IP ADDRESS WASNT TYPED CORRECTLY!");
                    continue;
                }
            }
        }

        //TO DO funckija za proveru da li je uneta ispravna ip adresa
        static bool CheckIfIpAdressIsCorrect(string ip) {
            return true;
        }

        //TO DO logovanje
        static void LogCriticalLevel() { 
        //TO DO
        }

 
    }
}
